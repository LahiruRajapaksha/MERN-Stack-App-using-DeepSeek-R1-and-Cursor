{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "type": "text",
      "version": 106,
      "versionNonce": 694625250,
      "isDeleted": false,
      "id": "iCkbaxh1gQ8PIkiT1Awy8",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 296,
      "y": 232,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 492.1875,
      "height": 72,
      "seed": 715744968,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1739107760309,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 3,
      "text": "How to use AI for a MERN stack application\n- using deepseekR1\n- cursor id",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "How to use AI for a MERN stack application\n- using deepseekR1\n- cursor id",
      "lineHeight": 1.2,
      "baseline": 67
    },
    {
      "id": "WBOTdbWExPQuJG_jg_8PZ",
      "type": "text",
      "x": 289.09375,
      "y": 358,
      "width": 316.40625,
      "height": 24,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 993696318,
      "version": 50,
      "versionNonce": 655715966,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1739108132098,
      "link": null,
      "locked": false,
      "text": "How to add models to cursor",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 19,
      "containerId": null,
      "originalText": "How to add models to cursor",
      "lineHeight": 1.2
    },
    {
      "id": "JiT-j3pocc-En95FWEmtN",
      "type": "text",
      "x": 140.09375,
      "y": 524,
      "width": 1359.375,
      "height": 624,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 472780770,
      "version": 1468,
      "versionNonce": 986812670,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1739108880759,
      "link": null,
      "locked": false,
      "text": "You are a senior software engineer with years of experience in MERN stack. \nPlease follow industry standardsand best practices when implementing this solution\n\nBuild a MERN  stack student registration application with the following requirements\n\n- Students with the  following attributes should get registerd to the stystme, StudentID, StudentName, Date of Birth\nand the Major\n-  Courses also should be able  to register into the system.Course  attributes  should be asl follows.\nCourseID,CourseName,Creadits,CourseStartDate\n-There should be a sperate interface to assign students into the courses\n- Students should have onlly  read-only access and view their details and courses that they got registered into\n\nThere should be a login screen with username and password.Each new  student should have a login screen and their\ndefault password should be \"Student123\" and they should be able to change their passwords later.\n\nPlease create the  required folder structure and files and add generated code into those files.\nThe Mongodb is located in the following connection string.  \nmongodb://localhost:27017\nI have created a datqabase named StudentRegistrationApp in there.\n\n- There should be two user levels as 'Admin' and 'Student'. Admin can do all the CRUD  in student\nregistrations, course and assign student into coursess\n\n- Students should have only-read only access and view their details and copurses that they \ngot registered into\n",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 619,
      "containerId": null,
      "originalText": "You are a senior software engineer with years of experience in MERN stack. \nPlease follow industry standardsand best practices when implementing this solution\n\nBuild a MERN  stack student registration application with the following requirements\n\n- Students with the  following attributes should get registerd to the stystme, StudentID, StudentName, Date of Birth\nand the Major\n-  Courses also should be able  to register into the system.Course  attributes  should be asl follows.\nCourseID,CourseName,Creadits,CourseStartDate\n-There should be a sperate interface to assign students into the courses\n- Students should have onlly  read-only access and view their details and courses that they got registered into\n\nThere should be a login screen with username and password.Each new  student should have a login screen and their\ndefault password should be \"Student123\" and they should be able to change their passwords later.\n\nPlease create the  required folder structure and files and add generated code into those files.\nThe Mongodb is located in the following connection string.  \nmongodb://localhost:27017\nI have created a datqabase named StudentRegistrationApp in there.\n\n- There should be two user levels as 'Admin' and 'Student'. Admin can do all the CRUD  in student\nregistrations, course and assign student into coursess\n\n- Students should have only-read only access and view their details and copurses that they \ngot registered into\n",
      "lineHeight": 1.2
    },
    {
      "id": "nxfvnUt0SMCAwbQyeBaql",
      "type": "arrow",
      "x": 663.9652947134113,
      "y": 514,
      "width": 46.128455286588746,
      "height": 12,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "seed": 375515518,
      "version": 346,
      "versionNonce": 683758270,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1739108439699,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          46.128455286588746,
          12
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "j9dIfZhQ6YcFJq5hamTBM",
        "focus": 0.9269003853332005,
        "gap": 13
      },
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "j9dIfZhQ6YcFJq5hamTBM",
      "type": "text",
      "x": 413.09375,
      "y": 453,
      "width": 632.8125,
      "height": 48,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "seed": 211337150,
      "version": 256,
      "versionNonce": 1672761982,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "nxfvnUt0SMCAwbQyeBaql",
          "type": "arrow"
        }
      ],
      "updated": 1739108439699,
      "link": null,
      "locked": false,
      "text": "Setting up the tone of the prompt. This will setup the\nAI's boundary which it needs to perform",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 43,
      "containerId": null,
      "originalText": "Setting up the tone of the prompt. This will setup the\nAI's boundary which it needs to perform",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}